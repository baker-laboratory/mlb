call: ['lib/ipd/ipd/tools/run_tests_on_file.py', 'mlb', 'ipd', '/home/sheffler/mlb/mlb/tests/test_specifications.py']
cwd: /home/sheffler/mlb
cmd: /home/sheffler/sw/MambaForge/envs/mlb/bin/python -mpytest --disable-warnings -m "not nondeterministic" mlb/tests/test_specifications.py
====================== ide/runtests.py running cmd in cwd ======================
============================= test session starts ==============================
platform linux -- Python 3.12.7, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/sheffler/mlb
configfile: pyproject.toml
plugins: repeat-0.9.2, hydra-core-1.3.2, subtests-0.13.1, hypothesis-6.115.3, schemathesis-3.38.2, anyio-4.6.0, xdist-3.6.1, sugar-1.0.0
collected 2 items

mlb/tests/test_specifications.py .F                                      [100%]

=================================== FAILURES ===================================
__________________________________ test_user ___________________________________

    @given(from_schema(schema))
>   def test_user(data):

mlb/tests/test_specifications.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis_jsonschema/_from_schema.py:146: in error_raiser
    raise error
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/core.py:1016: in _execute_once_for_engine
    result = self.execute_once(data)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/core.py:946: in execute_once
    result = self.test_runner(data, run)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/core.py:710: in default_executor
    return function(data)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/core.py:857: in run
    kw, argslices = context.prep_args_kwargs_from_strategies(
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/control.py:154: in prep_args_kwargs_from_strategies
    obj = check(self.data.draw(s, observe_as=f"generate:{k}"))
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/internal/conjecture/data.py:2525: in draw
    return strategy.do_draw(self)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/strategies/_internal/lazy.py:167: in do_draw
    return data.draw(self.wrapped_strategy)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/internal/conjecture/data.py:2519: in draw
    return strategy.do_draw(self)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis/strategies/_internal/core.py:1014: in do_draw
    obj = self.target(*args, **kwargs)
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis_jsonschema/_from_schema.py:146: in error_raiser
    raise error
../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis_jsonschema/_from_schema.py:137: in from_schema
    return __from_schema(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

schema = {'$defs': {'GroupSpec': {'description': 'user groups', 'properties': {'datecreated': {'format': 'date-time', 'title': ...title': 'Groups', 'type': 'array'}, ...}, 'required': ['name'], 'title': 'UserSpec', ...}}, '$ref': '#/$defs/UserSpec'}

    def __from_schema(
        schema: Union[bool, Schema],
        *,
        alphabet: CharStrategy,
        custom_formats: Optional[Dict[str, st.SearchStrategy[str]]],
    ) -> st.SearchStrategy[JSONType]:
        try:
            schema = resolve_all_refs(schema)
        except RecursionError:
>           raise HypothesisRefResolutionError(
                f"Could not resolve recursive references in schema={schema!r}"
            ) from None
E           hypothesis_jsonschema._canonicalise.HypothesisRefResolutionError: Could not resolve recursive references in schema={'$defs': {'GroupSpec': {'description': 'user groups', 'properties': {'id': {'format': 'uuid', 'title': 'Id', 'type': 'string'}, 'ghost': {'default': False, 'title': 'Ghost', 'type': 'boolean'}, 'datecreated': {'format': 'date-time', 'title': 'Datecreated', 'type': 'string'}, 'name': {'description': 'name of group', 'title': 'Name', 'type': 'string'}, 'users': {'description': 'users in this group', 'items': {'$ref': '#/$defs/UserSpec'}, 'title': 'Users', 'type': 'array'}}, 'required': ['name'], 'title': 'GroupSpec', 'type': 'object'}, 'UserSpec': {'description': 'basic user info', 'properties': {'id': {'format': 'uuid', 'title': 'Id', 'type': 'string'}, 'ghost': {'default': False, 'title': 'Ghost', 'type': 'boolean'}, 'datecreated': {'format': 'date-time', 'title': 'Datecreated', 'type': 'string'}, 'name': {'description': 'system username', 'title': 'Name', 'type': 'string'}, 'fullname': {'default': '', 'description': 'full user name', 'title': 'Fullname', 'type': 'string'}, 'groups': {'description': 'groups this user belongs to', 'items': {'$ref': '#/$defs/GroupSpec'}, 'title': 'Groups', 'type': 'array'}}, 'required': ['name'], 'title': 'UserSpec', 'type': 'object'}}, '$ref': '#/$defs/UserSpec'}
E           while generating 'data' from builds(error_raiser)
E           while generating 'data' from builds(error_raiser)

../sw/MambaForge/envs/mlb/lib/python3.12/site-packages/hypothesis_jsonschema/_from_schema.py:180: HypothesisRefResolutionError
=========================== short test summary info ============================
FAILED mlb/tests/test_specifications.py::test_user - hypothesis_jsonschema._c...
==================== 1 failed, 1 passed, 1 warning in 1.65s ====================
============================== main command done ===============================
======================== runtests.py done, time   3.064 ========================
