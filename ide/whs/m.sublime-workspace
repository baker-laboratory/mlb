{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"foll",
				"followingid"
			],
			[
				"__",
				"__init_subclass__"
			],
			[
				"pollfi",
				"pollfileid"
			],
			[
				"npoll",
				"npollfiles"
			],
			[
				"sql",
				"sqlalchemy"
			],
			[
				"new",
				"newuserid"
			],
			[
				"_",
				"_BACKEND"
			],
			[
				"vali",
				"_validated"
			],
			[
				"exc",
				"exc_str"
			],
			[
				"Poll",
				"PollSpec_get_structure_properties"
			],
			[
				"Pymol",
				"PymolCMDSpec"
			],
			[
				"la",
				"lazyimport"
			],
			[
				"M",
				"MANUAL"
			],
			[
				"DBUse",
				"DBUserUserLink"
			],
			[
				"Rev",
				"ReviewStep"
			],
			[
				"work",
				"WorkflowSpec"
			],
			[
				"DB",
				"DBReview"
			],
			[
				"DBF",
				"DBFlowStep"
			],
			[
				"flowst",
				"FlowStepSpec"
			],
			[
				"gui",
				"gui_error_check"
			],
			[
				"setM",
				"setMinimum"
			],
			[
				"up",
				"update_commands_gui"
			],
			[
				"set",
				"select_step"
			],
			[
				"add",
				"addWidget"
			],
			[
				"item",
				"itemAt"
			],
			[
				"taskm",
				"taskmaker_chaange"
			],
			[
				"taskmak",
				"taskmaker_chaange"
			],
			[
				"QBox",
				"QVBoxLayout"
			],
			[
				"W",
				"WorkflowStepGui"
			],
			[
				"update_cmd",
				"update_commands_gui"
			],
			[
				"filte",
				"filtered_cmd_list"
			],
			[
				"upda",
				"update_commands_gui"
			],
			[
				"con",
				"context_menu"
			],
			[
				"step",
				"stepwidget"
			],
			[
				"Wro",
				"WorkflowCreatorList"
			],
			[
				"setst",
				"setStyleSheet"
			],
			[
				"state",
				"state_types"
			],
			[
				"Flow",
				"FlowStepSpec"
			],
			[
				"PY",
				"PymolCMD"
			],
			[
				"Qwid",
				"QtWidgets"
			],
			[
				"active",
				"active_cmds"
			],
			[
				"refer",
				"refresh_command_list"
			],
			[
				"update_gui_from_",
				"update_gui_from_cmd"
			],
			[
				"guess",
				"guess_sym_from_directory"
			],
			[
				"updategui",
				"update_gui_from_poll"
			],
			[
				"acti",
				"action_is_allowed"
			],
			[
				"init",
				"__init__"
			],
			[
				"TO",
				"ToggleOrSetWithMemory"
			],
			[
				"is_",
				"is_global_state"
			],
			[
				"edi",
				"edit_poll"
			],
			[
				"create",
				"create_poll"
			],
			[
				"crea",
				"create_poll"
			],
			[
				"SE",
				"SERVER"
			],
			[
				"s",
				"SERVER"
			],
			[
				"pr",
				"printit"
			],
			[
				"print",
				"print_status"
			],
			[
				"ref",
				"refersh_toggle_list"
			],
			[
				"Conte",
				"ContextMenuMixin"
			],
			[
				"conte",
				"context_menu_items"
			],
			[
				"context",
				"context_menu"
			],
			[
				"CONTE",
				"ContextDialog"
			],
			[
				"setup",
				"setup_context_menus"
			],
			[
				"serve",
				"server_addr_or_testclient"
			],
			[
				"attr",
				"attrs_default"
			],
			[
				"props",
				"props_default"
			],
			[
				"attrs_",
				"attrs_default"
			],
			[
				"prop",
				"props_type"
			],
			[
				"createpollsc",
				"create_poll_spec"
			],
			[
				"cera",
				"create_poll_spec_from_gui"
			],
			[
				"test",
				"test_poll"
			],
			[
				"D",
				"DBPoll"
			],
			[
				"PYMOL",
				"PymolCMD"
			],
			[
				"f",
				"FileSpec"
			],
			[
				"stric",
				"strict_lookup"
			],
			[
				"bunch",
				"bunchwithparent"
			],
			[
				"file",
				"filecontent"
			],
			[
				"HAVE",
				"have_fname"
			],
			[
				"defa",
				"DEFAULTS"
			],
			[
				"_stat",
				"_statetype"
			],
			[
				"foo",
				"foopoll1"
			],
			[
				"foopoll",
				"foopoll2"
			],
			[
				"vi",
				"visible_cmds"
			],
			[
				"filt",
				"filtered_toggle_list"
			],
			[
				"update",
				"update_toggles_gui"
			],
			[
				"stri",
				"strict_lookup"
			],
			[
				"date",
				"datecreated"
			],
			[
				"cre",
				"create_poll_spec"
			],
			[
				"validate",
				"validate_and_add_to_db"
			],
			[
				"visi",
				"visible_cmds"
			],
			[
				"c",
				"c3"
			],
			[
				"suff",
				"STRUCTURE_FILE_SUFFIX"
			],
			[
				"dir",
				"dir_"
			],
			[
				"ac",
				"activepoll"
			],
			[
				"actie",
				"activepoll"
			],
			[
				"wi",
				"widget"
			],
			[
				"visibl",
				"visible_cmds"
			],
			[
				"chan",
				"change_case"
			],
			[
				"val",
				"validate_and_add_to_db"
			],
			[
				"check",
				"check_cmds"
			],
			[
				"refersh",
				"refresh_cmds"
			],
			[
				"sat",
				"state_file"
			],
			[
				"act",
				"active_cmds"
			],
			[
				"sub",
				"subject_name"
			],
			[
				"STA",
				"STATE_FILE"
			],
			[
				"CONF",
				"CONFIG_FILE"
			],
			[
				"isper",
				"is_per_poll_state"
			],
			[
				"isglo",
				"is_global_state"
			],
			[
				"CREATE",
				"create_review"
			],
			[
				"list",
				"listitemdict"
			],
			[
				"listitem",
				"listitemdict"
			],
			[
				"cmd",
				"CmdException"
			],
			[
				"ST",
				"STRUCTURE_FILE_SUFFIX"
			],
			[
				"run",
				"run_polls_stress_test"
			],
			[
				"run_",
				"run_polls_stress_test"
			],
			[
				"review",
				"review_action"
			],
			[
				"client",
				"client_obj_representer"
			],
			[
				"clint",
				"client_obj_representer"
			],
			[
				"Pym",
				"PymolCMD"
			],
			[
				"ref_aton",
				"ref_atom_names_by_lig"
			],
			[
				"symct",
				"symctgatom"
			],
			[
				"test_sym_in",
				"test_sym_indep_atom_lig_sym"
			],
			[
				"make",
				"make_symgp_conf"
			],
			[
				"coin",
				"contig_dict"
			],
			[
				"transforms",
				"debug_transforms"
			],
			[
				"Trans",
				"TransformedDataset"
			],
			[
				"diff",
				"diffuse_t"
			],
			[
				"desi",
				"design_steps"
			],
			[
				"tens",
				"tensor_is_xyz"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import mlb\n\ndef main():\n    test_bash()\n\ndef test_bash():\n    stdout, stderr, retcode = mlb.exec.bash('ls')\n\nif __name__ == '__main__':\n    main()\n",
			"file": "/home/sheffler/ml_benchmarks/mlb/tests/exec/shell.py",
			"file_size": 147,
			"file_write_time": 133730986930222454,
			"settings":
			{
				"buffer_size": 147,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAUAAAAAAAAABgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_completion",
					{
						"completion": "if __name__ == '__main__':\n\t${1:main()}$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ifmain"
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAaWZtYWluAAAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJA"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAAIAAAAAAAAAAgAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAAEAAAAAAAAAAQAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAAUAAAAAAAAABgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAAoAAAAAAAAACwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "te"
					},
					"AgAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAABIAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAABMAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAABUAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "as"
					},
					"AgAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAlAAAAAAAAAAAAAAAcAAAAAAAAABwAAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAB0AAAAAAAAAHQAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAB0AAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"left_delete",
					null,
					"AQAAAB8AAAAAAAAAHwAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "te"
					},
					"AgAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACMAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAACYAAAAAAAAAJwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAACcAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACoAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACwAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJA"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "ipm"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "rt"
					},
					"AgAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"left_delete",
					null,
					"AQAAAAYAAAAAAAAABgAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAAAUAAAAAAAAABQAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"left_delete",
					null,
					"AQAAAAQAAAAAAAAABAAAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAAAMAAAAAAAAAAwAAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"left_delete",
					null,
					"AQAAAAIAAAAAAAAAAgAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAAAEAAAAAAAAAAQAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAAUAAAAAAAAABgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAAgAAAAAAAAACQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAoAAAAAAAAACwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADoAAAAAAAAAOwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAAAAA"
				],
				[
					175,
					1,
					"reindent",
					null,
					"AQAAADoAAAAAAAAAPgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAAAAA"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAAD4AAAAAAAAAPgAAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAEEAAAAAAAAAQgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "as"
					},
					"AgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsAAAAAAAAATQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEwAAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAE0AAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAABAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAEgAAAAAAAAASQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0AAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAFAAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAFEAAAAAAAAAUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAFIAAAAAAAAAUwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAFMAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"left_delete",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"left_delete",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAAFcAAAAAAAAAVwAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAAEAAAAAAAAAAQAAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "",
			"file": "/home/sheffler/ml_benchmarks/mlb/exec/shell.py",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"unsaved": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"save pro",
				"Project: Save As"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"destcur",
				"Origami: Destroy Current Pane"
			],
			[
				"toml",
				"Set Syntax: TOML"
			],
			[
				"destlef",
				"Origami: Destroy Pane on the Left"
			],
			[
				"destpaa",
				"Origami: Destroy Pane Above"
			],
			[
				"destcr",
				"Origami: Destroy Current Pane"
			],
			[
				"destcurr",
				"Origami: Destroy Current Pane"
			],
			[
				"title",
				"Convert Case: Title Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"desble",
				"Origami: Destroy Pane Below"
			],
			[
				"destri",
				"Origami: Destroy Pane on the Right"
			],
			[
				"destble",
				"Origami: Destroy Pane Below"
			],
			[
				"unfold",
				"Code Folding: Unfold"
			],
			[
				"sort",
				"SortBy: Alphabetically"
			],
			[
				"bash",
				"Set Syntax: Bash"
			],
			[
				"bask",
				"Bookmarks: Select All"
			],
			[
				"dest",
				"Origami: Destroy Pane on the Right"
			],
			[
				"de",
				"Origami: Destroy Current Pane"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"destro",
				"Origami: Destroy Current Pane"
			],
			[
				"savell",
				"File: Save All"
			],
			[
				"ins",
				"Insert Nums"
			],
			[
				"inse",
				"Insert Nums"
			],
			[
				"add",
				"Project: Add Folder"
			],
			[
				"canc",
				"Build: Cancel"
			],
			[
				"Package Control: ",
				"Package Control: Add Channel"
			],
			[
				"settin",
				"Preferences: Settings"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"addf",
				"Project: Add Folder"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"edi",
				"Project: Edit Project"
			],
			[
				"saveal",
				"File: Save All"
			],
			[
				"k",
				"Preferences: Key Bindings"
			],
			[
				"ca",
				"Build: Cancel"
			],
			[
				"ui",
				"UI: Select Color Scheme"
			],
			[
				"can",
				"Build: Cancel"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"kye",
				"Preferences: Key Bindings"
			],
			[
				"ky",
				"Preferences: Key Bindings"
			],
			[
				"kyb",
				"Preferences: Key Bindings"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"proj",
				"Project: Edit Project"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"crea",
				"Origami: Create Pane on the Right"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"preferen",
				"Preferences: Settings"
			],
			[
				"prefer",
				"Preferences: Settings"
			],
			[
				"neovinsett",
				"Preferences: NeoVintageous Settings"
			],
			[
				"creatbel",
				"Origami: Create Pane Below"
			],
			[
				"keybind",
				"Preferences: Key Bindings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"keybin",
				"Preferences: Key Bindings"
			],
			[
				"prefersett",
				"Preferences: Settings"
			],
			[
				"import",
				"Py Rock: Import Symbol"
			],
			[
				"sor",
				"SortBy: Alphabetically"
			],
			[
				"debug",
				"Package Control: Disable Debug Mode"
			],
			[
				"lsp",
				"LSP: Format File"
			],
			[
				"preferpy",
				"Preferences: LSP-pyright Settings"
			],
			[
				"cacn",
				"Build: Cancel"
			],
			[
				"insnu",
				"Insert Nums"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insnum",
				"Insert Nums"
			],
			[
				"sav",
				"File: Save All"
			],
			[
				"inser",
				"Insert Nums"
			],
			[
				"mer",
				"Sublime Merge: Open Repository"
			],
			[
				"merge",
				"Sublime Merge: Open Repository"
			],
			[
				"cac",
				"Build: Cancel"
			],
			[
				"sortl",
				"Sort Lines"
			],
			[
				"buil",
				"Build: Cancel"
			],
			[
				"refer",
				"Project: Refresh Folders"
			],
			[
				"pref",
				"Preferences: Settings"
			],
			[
				"removepa",
				"Package Control: Remove Package"
			],
			[
				"forma",
				"LSP: Format File"
			],
			[
				"ruff",
				"Preferences: LSP-ruff Settings"
			],
			[
				"format",
				"LSP: Format File"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"edit",
				"Project: Edit Project"
			],
			[
				"creap",
				"Origami: Create Pane on the Right"
			],
			[
				"prv",
				"PackageResourceViewer: Open Resource"
			],
			[
				"creri",
				"Origami: Create Pane on the Right"
			],
			[
				"instllpa",
				"Package Control: Install Package"
			],
			[
				"openai",
				"OpenAI: New Message"
			],
			[
				"crepa",
				"Origami: Create Pane on the Left"
			],
			[
				"crele",
				"Origami: Create Pane on the Left"
			],
			[
				"clea",
				"Bookmarks: Clear All"
			],
			[
				"braek",
				"Python Breakpoints: Toggle"
			],
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"uicol",
				"UI: Select Color Scheme"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"crae",
				"Origami: Create Pane with File Below"
			],
			[
				"rn",
				"Rename File"
			],
			[
				"rena",
				"Rename File"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"craepa",
				"Origami: Create Pane Above"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"cnc",
				"ColorSchemeSelector: Next Color Scheme"
			],
			[
				"fold",
				"Code Folding: Fold All"
			],
			[
				"ccanc",
				"Package Control: Advanced Install Package"
			],
			[
				"cahc",
				"Package Control: Add Channel"
			],
			[
				"dist",
				"View: Toggle Distraction Free"
			],
			[
				"zoom",
				"Origami: Zoom/Unzoom Current Pane (Toggle Zoom)"
			],
			[
				"creabel",
				"Origami: Create Pane Below"
			],
			[
				"soa",
				"SortBy: Alphabetically"
			],
			[
				"tab",
				"View: Toggle Tabs"
			],
			[
				"move",
				"Origami: Move File to Pane on the Right"
			],
			[
				"tabs",
				"View: Toggle Tabs"
			],
			[
				"craebelo",
				"Origami: Create Pane Below"
			],
			[
				"bel",
				"Origami: Create Pane Below"
			],
			[
				"crerig",
				"Origami: Create Pane on the Right"
			],
			[
				"trarigh",
				"Origami: Destroy Pane on the Right"
			],
			[
				"minim",
				"View: Toggle Minimap"
			],
			[
				"instll",
				"Package Control: Install Package"
			],
			[
				"col",
				"UI: Select Color Scheme"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"colorcomm",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"me",
				"View: Toggle Menu"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"togg",
				"View: Toggle Menu"
			],
			[
				"cerri",
				"Origami: Create Pane on the Right"
			],
			[
				"detrc",
				"Origami: Destroy Current Pane"
			],
			[
				"sypy",
				"Set Syntax: Python"
			],
			[
				"uis",
				"UI: Select Color Scheme"
			]
		],
		"width": 488.0
	},
	"console":
	{
		"height": 296.0,
		"history":
		[
			"sublime.log_commands(True)",
			"print()\n",
			"print()",
			"clear",
			"os.environ['PATH']",
			"print(sys.version)",
			"import os",
			"print(sys.path)",
			"print(sys.executable)",
			"import sys",
			"os.environ['PATH']",
			"import os",
			"sys.path",
			"import sys",
			"print(os.environ['PATH'])",
			"import os",
			"print(os.environ['PATH'])",
			"import os",
			"print(os.environ['PATH'])",
			"import os",
			"print(sys.executable)",
			"print sys.executable",
			"import sys"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/sheffler/ml_benchmarks"
	],
	"file_history":
	[
		"/home/sheffler/ml_benchmarks/ide/whs/m.sublime-project",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/gui_commands.py",
		"/home/sheffler/src/ppp/ipd/qt/__init__.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/pymol_viewer.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/gui_polls.py",
		"/home/sheffler/src/ppp/ipd/ppp/clientmodels.py",
		"/home/sheffler/src/ppp/ipd/ppp/models.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/defaults.py",
		"/home/sheffler/src/ppp/ipd/ppp/client.py",
		"/home/sheffler/src/ppp/ipd/tests/ppp/server/test_pppapi.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/dbmodels.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/pppapi.py",
		"/home/sheffler/src/ppp/ide/sublime_build.log",
		"/home/sheffler/src/ppp/ipd/ppp/server/__main__.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/defaults.yaml",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/prettier_protein_project_pymol_plugin.py",
		"/home/sheffler/src/ppp/ipd/ppp/__init__.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/__init__.py",
		"/home/sheffler/src/ppp/ipd/ppp/defaults.py",
		"/home/sheffler/src/ppp/ipd/ppp/alembic.ini",
		"/home/sheffler/src/ppp/ipd/ppp/alembic/env.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/__init__.py",
		"/home/sheffler/src/ppp/ipd/dev/lazy_import.py",
		"/home/sheffler/src/ppp/ipd/dev/state.py",
		"/home/sheffler/src/ppp/ipd/ppp/polls.py",
		"/home/sheffler/.local/share/pikaur/aur_repos/pgadmin4-py/PKGBUILD",
		"/home/sheffler/src/ppp/ipd/ppp/alembic/versions/468cc433bfa6_tost.py",
		"/home/sheffler/src/ppp/ipd/ppp/alembic/versions/055b0da79b04_foo.py",
		"/home/sheffler/src/ppp/ipd/ppp/specmodels.py",
		"/home/sheffler/src/ppp/ipd/ppp/pppspec.py",
		"/home/sheffler/src/ppp/ipd/qt/context_menu.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/gui_workflow.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/__init__.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/ppp_server.spec",
		"/home/sheffler/.config/ppp/localconfig.yaml",
		"/home/sheffler/src/ppp/ipd/dev/git.py",
		"/home/sheffler/.config/ppp/localstate.yaml",
		"/home/sheffler/src/ppp/ipd/tests/ppp/plugin/test_prettier_protein_project_pymol_plugin.py",
		"/home/sheffler/src/ppp/ipd/dev/bunch.py",
		"/home/sheffler/src/ppp/ipd/tests/dev/test_state.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/ppppp_defaults.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/workflow.py",
		"/home/sheffler/src/ppp/ipd/dev/filefetch.py",
		"/home/sheffler/src/ppp/ipd/dev/__init__.py",
		"/home/sheffler/src/ppp/ipd/sym/guess_symmetry.py",
		"/home/sheffler/src/ppp/.github/ISSUE_TEMPLATE/feature_request.md",
		"/home/sheffler/src/ppp/ipd/sym/__init__.py",
		"/home/sheffler/src/ppp/ipd/dev/toggle.py",
		"/home/sheffler/src/ppp/ipd/tests/__init__.py",
		"/home/sheffler/src/ppp/ipd/__init__.py",
		"/home/sheffler/src/ppp/ipd/dev/contexts.py",
		"/home/sheffler/src/ppp/ipd/ppp/plugin/ppppp/gui_grid_main.ui",
		"/home/sheffler/src/ppp/ipd/tests/dev/filefetch.py",
		"/home/sheffler/src/ppp/ide/whs/ipd.sublime-project",
		"/home/sheffler/sw/MambaForge/envs/ppp/lib/python3.10/site-packages/uvloop/cbhandles.pyx",
		"/home/sheffler/sw/MambaForge/envs/ppp/lib/python3.10/site-packages/uvloop/loop.pyx",
		"/home/sheffler/sw/MambaForge/envs/ppp/lib/python3.10/site-packages/uvicorn/server.py",
		"/home/sheffler/src/ppp/ipd/ppp/server/run_uvicorn_server.sh",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_guess_symmetry.py",
		"/home/sheffler/src/ppp/ipd/ppp/defaults.yaml",
		"/home/sheffler/src/ppp/ipd/dev/safe_eval.py",
		"/home/sheffler/src/ppp/ipd/tests/conftest.py",
		"/home/sheffler/sw/MambaForge/envs/ppp/lib/python3.12/threading.py",
		"/home/sheffler/src/ppp/.gitignore",
		"/home/sheffler/src/ppp/ipd/sym/sym_slice.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_util.py",
		"/home/sheffler/src/ppp/ipd/tests/voxel/test_voxel.py",
		"/home/sheffler/src/ppp/ipd/tests/voxel/test_voxdock.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_sym_tensor.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_sym_slice.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_sym_manager.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_sym_fitting.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_sym_check.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_sym_adapt.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/test_ipd_sym_manager.py",
		"/home/sheffler/src/ppp/ipd/tests/samp/test_tip_atom_placer.py",
		"/home/sheffler/src/ppp/ipd/tests/samp/test_sampling.py",
		"/home/sheffler/src/ppp/ipd/tests/fit/test_qcp_scan.py",
		"/home/sheffler/src/ppp/ipd/tests/fit/test_qcp_rms.py",
		"/home/sheffler/src/ppp/ipd/tests/cuda/test_cudafunc.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_tensor.py",
		"/home/sheffler/src/ppp/ipd/sieve/basic_sieves.py",
		"/home/sheffler/src/ppp/ipd/samp/tip_atom_placer.py",
		"/home/sheffler/src/ppp/ipd/samp/sampling.py",
		"/home/sheffler/src/ppp/ipd/fit/qcp_scan.py",
		"/home/sheffler/src/ppp/ipd/fit/qcp_rms.py",
		"/home/sheffler/src/ppp/ipd/cuda/cudafunc.py",
		"/home/sheffler/src/ppp/ipd/cuda/cudabuild.py",
		"/home/sheffler/src/ppp/ipd/voxel/voxel.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_fitting.py",
		"/home/sheffler/src/ppp/ipd/sym/ipd_sym_manager.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_manager.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_options.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_check.py",
		"/home/sheffler/Downloads/Advanced Home Row Mods (HRM) Example v35 (1).keymap",
		"/tmp/tmp.Dw7AIJlu6B.fish",
		"/home/sheffler/src/wills_pymol_crap/wills_pymol_crap/xyzMath.py",
		"/home/sheffler/src/ppp/ipd/voxel/voxdock.py",
		"/home/sheffler/src/ppp/ipd/tests/sym/sym_test_util.py",
		"/home/sheffler/src/ppp/ipd/sym/sym_adapt.py",
		"/home/sheffler/sw/apptainer/INSTALL.md",
		"/data/sheffler/project/ppp/sifdir/.singularity.d/runscript",
		"/home/sheffler/src/ppp/ipd/dev/timer.py",
		"/tmp/tmp.EFQ62WSbrr.fish",
		"/home/sheffler/rfdsym/lib/rf2aa/lib/ipd/ipd/sieve/sieve.py",
		"/home/sheffler/rfdsym/sublime_build.log",
		"/home/sheffler/rfdsym/rf_diffusion/test_inference.py",
		"/home/sheffler/rfdsym/lib/rf2aa/lib/ipd/ipd/sym/sym_util.py",
		"/home/sheffler/rfdsym/ide/runtests.py",
		"/home/sheffler/rfdsym/rf_diffusion/__init__.py",
		"/home/sheffler/rfdsym/rf_diffusion/tests/integration/test_sym_inference.py",
		"/home/sheffler/rfdsym/rf_diffusion/inference/data_loader.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_adapt.py",
		"/home/sheffler/rfdsym/rf_diffusion/sym/sym_indep.py",
		"/home/sheffler/rfdsym/rf_diffusion/tests/sym/test_sym_indep.py",
		"/home/sheffler/rfdsym/rf_diffusion/inference/model_runners.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_slice.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/rf2_sym_manager.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_manager.py",
		"/home/sheffler/rfdsym/rf_diffusion/viz/viz_indep_pymol.py",
		"/home/sheffler/project/rfdsym/hilvert/input/sym_gp.yaml",
		"/home/sheffler/rfdsym/rf_diffusion/conditioning.py",
		"/home/sheffler/rfdsym/ide/whs/rf_diffusion.sublime-project",
		"/home/sheffler/rfdsym/rf_diffusion/contigs.py",
		"/home/sheffler/rfdsym/rf_diffusion/sym/rfd_sym_manager.py",
		"/home/sheffler/rfdsym/rf_diffusion/aa_model.py",
		"/data/sheffler/project/rfdsym/retroaldo/input/retroaldo_theo_c2.pdb",
		"/home/sheffler/rfdsym/rf_diffusion/observer/pymol_observer.py"
	],
	"find":
	{
		"height": 31.0
	},
	"find_in_files":
	{
		"height": 235.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": false,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/sheffler/ml_benchmarks/mlb/tests/exec/shell.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 147,
						"regions":
						{
						},
						"selection":
						[
							[
								40,
								40
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///home/sheffler/ml_benchmarks/mlb/tests/exec/shell.py",
							"show_definitions": false,
							"sublime_recent_sort_is_transient": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"lsp_uri": "buffer:455",
							"sublime_recent_sort_is_transient": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/sheffler/ml_benchmarks/mlb/exec/shell.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///home/sheffler/ml_benchmarks/mlb/exec/shell.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 290.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 47.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.project_environment_log":
	{
		"height": 0.0
	},
	"pinned_build_system": "test ppp server",
	"project": "m.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pppap",
				"ipd/ppp/server/pppapi.py"
			],
			[
				"dbmo",
				"ipd/ppp/server/dbmodels.py"
			],
			[
				"client",
				"ipd/ppp/client.py"
			],
			[
				"test_pppapi",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"pppapi",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"dbmod",
				"ipd/ppp/server/dbmodels.py"
			],
			[
				"clientmo",
				"ipd/ppp/clientmodels.py"
			],
			[
				"dbmodel",
				"ipd/ppp/server/dbmodels.py"
			],
			[
				"clientmod",
				"ipd/ppp/clientmodels.py"
			],
			[
				"main",
				"ipd/ppp/server/__main__.py"
			],
			[
				"defaul",
				"ipd/ppp/server/defaults.yaml"
			],
			[
				"mod",
				"ipd/ppp/models.py"
			],
			[
				"def",
				"ipd/ppp/server/defaults.py"
			],
			[
				"testpppa",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"default",
				"ipd/ppp/server/defaults.py"
			],
			[
				"prett",
				"ipd/ppp/plugin/ppppp/prettier_protein_project_pymol_plugin.py"
			],
			[
				"pppapy",
				"ipd/ppp/server/pppapi.py"
			],
			[
				"defa",
				"ipd/ppp/server/defaults.py"
			],
			[
				"model",
				"ipd/ppp/models.py"
			],
			[
				"pppinit",
				"ipd/ppp/__init__.py"
			],
			[
				"ale",
				"ipd/ppp/alembic.ini"
			],
			[
				"env",
				"ipd/ppp/alembic/env.py"
			],
			[
				"alem",
				"ipd/ppp/alembic.ini"
			],
			[
				"guipoll",
				"ipd/ppp/plugin/ppppp/gui_polls.py"
			],
			[
				"guicom",
				"ipd/ppp/plugin/ppppp/gui_commands.py"
			],
			[
				"qt",
				"ipd/qt/__init__.py"
			],
			[
				"ppppini",
				"ipd/ppp/plugin/__init__.py"
			],
			[
				"guip",
				"ipd/ppp/plugin/ppppp/gui_polls.py"
			],
			[
				"plugininit",
				"ipd/ppp/plugin/__init__.py"
			],
			[
				"state",
				"ipd/dev/state.py"
			],
			[
				"clien",
				"ipd/ppp/client.py"
			],
			[
				"tost",
				"ipd/ppp/alembic/versions/468cc433bfa6_tost.py"
			],
			[
				"foo",
				"ipd/ppp/alembic/versions/055b0da79b04_foo.py"
			],
			[
				"lazyi",
				"ipd/dev/lazy_import.py"
			],
			[
				"",
				"ipd/ppp/specmodels.py"
			],
			[
				"specmo",
				"ipd/ppp/specmodels.py"
			],
			[
				"spec",
				"ipd/ppp/pppspec.py"
			],
			[
				"git",
				"ipd/dev/git.py"
			],
			[
				"testprett",
				"ipd/tests/ppp/plugin/test_prettier_protein_project_pymol_plugin.py"
			],
			[
				"bunch.py",
				"ipd/dev/bunch.py"
			],
			[
				"conte",
				"ipd/qt/context_menu.py"
			],
			[
				"gui_wor",
				"ipd/ppp/plugin/ppppp/gui_workflow.py"
			],
			[
				"ppppinit",
				"ipd/ppp/plugin/ppppp/__init__.py"
			],
			[
				"devini",
				"ipd/dev/__init__.py"
			],
			[
				"qtinit",
				"ipd/qt/__init__.py"
			],
			[
				"filefe",
				"ipd/dev/filefetch.py"
			],
			[
				"pppppinit",
				"ipd/ppp/plugin/ppppp/__init__.py"
			],
			[
				"testpprett",
				"ipd/tests/ppp/plugin/test_prettier_protein_project_pymol_plugin.py"
			],
			[
				"pppa",
				"ipd/ppp/server/pppapi.py"
			],
			[
				"guess",
				"ipd/sym/guess_symmetry.py"
			],
			[
				"geutt",
				".github/ISSUE_TEMPLATE/feature_request.md"
			],
			[
				"syminit",
				"ipd/sym/__init__.py"
			],
			[
				"togg",
				"ipd/dev/toggle.py"
			],
			[
				"stat",
				"ipd/dev/state.py"
			],
			[
				"devinit",
				"ipd/dev/__init__.py"
			],
			[
				"detinit",
				"ipd/tests/__init__.py"
			],
			[
				"qtini",
				"ipd/qt/__init__.py"
			],
			[
				"ipdini",
				"ipd/__init__.py"
			],
			[
				"test_state",
				"ipd/tests/dev/test_state.py"
			],
			[
				"prettie",
				"ipd/ppp/plugin/ppppp/prettier_protein_project_pymol_plugin.py"
			],
			[
				"testpre",
				"ipd/tests/ppp/plugin/test_prettier_protein_project_pymol_plugin.py"
			],
			[
				"prettier",
				"ipd/ppp/plugin/ppppp/prettier_protein_project_pymol_plugin.py"
			],
			[
				"local",
				"~/.config/ppp/localconfig.yaml"
			],
			[
				"config",
				"~/.config/ppp/localconfig.yaml"
			],
			[
				"bun",
				"ipd/dev/bunch.py"
			],
			[
				"mainui",
				"ipd/ppp/plugin/ppppp/gui_grid_main.ui"
			],
			[
				"ui",
				"ipd/ppp/plugin/ppppp/gui_grid_main.ui"
			],
			[
				"la",
				"ipd/dev/lazy_import.py"
			],
			[
				"testppa",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"pppinip",
				"ipd/ppp/plugin/ppppp/__init__.py"
			],
			[
				"ipd init",
				"ipd/__init__.py"
			],
			[
				"sape",
				"ipd/dev/safe_eval.py"
			],
			[
				"lay",
				"ipd/dev/lazy_import.py"
			],
			[
				"ipdinit",
				"ipd/__init__.py"
			],
			[
				"testsinit",
				"ipd/tests/__init__.py"
			],
			[
				"conftest",
				"ipd/tests/conftest.py"
			],
			[
				"bunch",
				"ipd/dev/bunch.py"
			],
			[
				"testppapi",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"testppp",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"gui",
				"ipd/ppp/plugin/ppppp/gui_grid_main.ui"
			],
			[
				"p",
				"ipd/ppp/plugin/ppppp/prettier_protein_project_pymol_plugin.py"
			],
			[
				"cli",
				"ipd/ppp/client.py"
			],
			[
				"testpppap",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"symmam",
				"ipd/sym/sym_manager.py"
			],
			[
				"symfitt",
				"ipd/sym/sym_fitting.py"
			],
			[
				"symche",
				"ipd/sym/sym_check.py"
			],
			[
				"symopt",
				"ipd/sym/sym_options.py"
			],
			[
				"prepp",
				"ipd/ppp/plugin/ppppp/prettier_protein_project_pymol_plugin.py"
			],
			[
				"pppaip",
				"ipd/ppp/server/pppapi.py"
			],
			[
				"gues",
				"ipd/sym/guess_symmetry.py"
			],
			[
				"__mai",
				"ipd/ppp/server/__main__.py"
			],
			[
				"sych",
				"ipd/sym/sym_check.py"
			],
			[
				"symada",
				"ipd/sym/sym_adapt.py"
			],
			[
				"sym_opt",
				"ipd/sym/sym_options.py"
			],
			[
				"symsli",
				"ipd/sym/sym_slice.py"
			],
			[
				"symutil",
				"ipd/sym/sym_util.py"
			],
			[
				"clie",
				"ipd/ppp/client.py"
			],
			[
				"defau",
				"ipd/ppp/defaults.yaml"
			],
			[
				"testpert",
				"ipd/tests/ppp/plugin/test_prettier_protein_project_pymol_plugin.py"
			],
			[
				".spec",
				"ipd/ppp/server/ppp_server.spec"
			],
			[
				"test_ppp",
				"ipd/tests/ppp/server/test_pppapi.py"
			],
			[
				"subl",
				"ide/sublime_build.log"
			],
			[
				"timer",
				"ipd/dev/timer.py"
			],
			[
				"pppdefa",
				"ipd/ppp/defaults.py"
			],
			[
				".giti",
				".gitignore"
			],
			[
				"testapp",
				"rfdsym/rf_diffusion/test_apptainer.py"
			],
			[
				"pymolob",
				"rfdsym/rf_diffusion/observer/pymol_observer.py"
			],
			[
				"aa_mo",
				"rfdsym/rf_diffusion/aa_model.py"
			],
			[
				"condit",
				"rfdsym/rf_diffusion/conditioning.py"
			],
			[
				"retro",
				"input/symgp_retroaldo.yaml"
			],
			[
				"sli",
				"rfdsym/lib/rf2aa/rf2aa/sym/sym_slice.py"
			],
			[
				"sym_man",
				"rfdsym/lib/rf2aa/rf2aa/sym/sym_manager.py"
			],
			[
				"sym.ya",
				"rfdsym/rf_diffusion/config/inference/sym.yaml"
			],
			[
				"pymol_obs",
				"rfdsym/rf_diffusion/observer/pymol_observer.py"
			],
			[
				"symmana",
				"rfdsym/lib/rf2aa/rf2aa/sym/sym_manager.py"
			],
			[
				"modelrunn",
				"rfdsym/rf_diffusion/inference/model_runners.py"
			],
			[
				"vizin",
				"rfdsym/rf_diffusion/viz/viz_indep_pymol.py"
			],
			[
				"sym_gp",
				"input/sym_gp.yaml"
			],
			[
				"rfdsym",
				"rfdsym/rf_diffusion/sym/rfd_sym_manager.py"
			],
			[
				"symman",
				"rfdsym/lib/rf2aa/rf2aa/sym/sym_manager.py"
			],
			[
				"sym_gp_AB",
				"rfdsym/rf_diffusion/benchmark/input/sym_gp_AB.pdb"
			],
			[
				"rfdsymma",
				"rfdsym/rf_diffusion/sym/rfd_sym_manager.py"
			],
			[
				"syminde",
				"rfdsym/rf_diffusion/sym/sym_indep.py"
			],
			[
				"symslice",
				"rfdsym/lib/rf2aa/rf2aa/sym/sym_slice.py"
			],
			[
				"vizind",
				"rfdsym/rf_diffusion/viz/viz_indep_pymol.py"
			],
			[
				"aamodel",
				"rfdsym/rf_diffusion/aa_model.py"
			],
			[
				"testsyminf",
				"rfdsym/rf_diffusion/tests/integration/test_sym_inference.py"
			],
			[
				"sym_slice",
				"rfdsym/lib/rf2aa/rf2aa/sym/sym_slice.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 650.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 494.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "__deepc",
		"selected_items":
		[
			[
				"__deepc",
				"__deepcopy__"
			],
			[
				"fillrom",
				"fill_from_contiguous"
			],
			[
				"cretestsym",
				"create_test_sym_manager"
			],
			[
				"inserco",
				"insert_contig_pre_atomization"
			],
			[
				"insercon",
				"insert_contig_pre_atomization"
			],
			[
				"insercont",
				"insert_contig"
			],
			[
				"set_kind",
				"set_kind"
			],
			[
				"symindep",
				"SymAdaptIndep"
			],
			[
				"unsym",
				"move_unsym_to_match_asu"
			],
			[
				"set_nstep",
				"set_nstep"
			],
			[
				"mounsym",
				"move_unsym_to_match_asu"
			],
			[
				"testsymconti",
				"test_sym_contig"
			],
			[
				"applypair",
				"apply_symmetry_pair"
			]
		],
		"width": 770.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 323.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
